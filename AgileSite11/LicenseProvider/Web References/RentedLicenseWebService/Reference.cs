//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 

using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Threading;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

using CMS.LicenseProvider.Properties;

#pragma warning disable 1591

namespace CMS.LicenseProvider.RentedLicenseWebService
{
    using System;


    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.1")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [WebServiceBinding(Name = "RentedLicenseServiceSoap", Namespace = "http://service.kentico.com/")]
    public partial class RentedLicenseService : SoapHttpClientProtocol
    {
        private SendOrPostCallback GetLicenseKeysOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;


        /// <remarks/>
        public RentedLicenseService()
        {
            Url = Settings.Default.CMS_LicenseProvider_RentedLicenseWebService_RentedLicenseService;
            if ((IsLocalFileSystemWebService(Url) == true))
            {
                UseDefaultCredentials = true;
                useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                useDefaultCredentialsSetExplicitly = true;
            }
        }


        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((IsLocalFileSystemWebService(base.Url) == true)
                      && (useDefaultCredentialsSetExplicitly == false))
                     && (IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event GetLicenseKeysCompletedEventHandler GetLicenseKeysCompleted;


        /// <remarks/>
        [SoapDocumentMethod("http://service.kentico.com/GetLicenseKeys", RequestNamespace = "http://service.kentico.com/", ResponseNamespace = "http://service.kentico.com/", Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Wrapped)]
        public RentedLicenseResponse GetLicenseKeys(string[] rentedkeys, string[] requiredKeys, int version)
        {
            object[] results = Invoke("GetLicenseKeys", new object[]
                                                            {
                                                                rentedkeys,
                                                                requiredKeys,
                                                                version
                                                            });
            return ((RentedLicenseResponse)(results[0]));
        }


        /// <remarks/>
        public void GetLicenseKeysAsync(string[] rentedkeys, string[] requiredKeys, int version)
        {
            GetLicenseKeysAsync(rentedkeys, requiredKeys, version, null);
        }


        /// <remarks/>
        public void GetLicenseKeysAsync(string[] rentedkeys, string[] requiredKeys, int version, object userState)
        {
            if ((GetLicenseKeysOperationCompleted == null))
            {
                GetLicenseKeysOperationCompleted = new SendOrPostCallback(OnGetLicenseKeysOperationCompleted);
            }
            InvokeAsync("GetLicenseKeys", new object[]
                                              {
                                                  rentedkeys,
                                                  requiredKeys,
                                                  version
                                              }, GetLicenseKeysOperationCompleted, userState);
        }


        private void OnGetLicenseKeysOperationCompleted(object arg)
        {
            if ((GetLicenseKeysCompleted != null))
            {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                GetLicenseKeysCompleted(this, new GetLicenseKeysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }


        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }


        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                 || (url == string.Empty)))
            {
                return false;
            }
            Uri wsUri = new Uri(url);
            if (((wsUri.Port >= 1024)
                 && (string.Compare(wsUri.Host, "localHost", StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.0.30319.233")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://service.kentico.com/")]
    public partial class RentedLicenseResponse
    {
        private string statusField;

        private string messageField;

        private DomainLicense[] licensesField;

        /// <remarks/>
        public string Status
        {
            get
            {
                return statusField;
            }
            set
            {
                statusField = value;
            }
        }

        /// <remarks/>
        public string Message
        {
            get
            {
                return messageField;
            }
            set
            {
                messageField = value;
            }
        }

        /// <remarks/>
        [XmlArrayItem(IsNullable = false)]
        public DomainLicense[] Licenses
        {
            get
            {
                return licensesField;
            }
            set
            {
                licensesField = value;
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.0.30319.233")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://service.kentico.com/")]
    public partial class DomainLicense
    {
        private string domainField;

        private string licenseKeyField;

        private string statusField;

        private string messageField;

        /// <remarks/>
        public string Domain
        {
            get
            {
                return domainField;
            }
            set
            {
                domainField = value;
            }
        }

        /// <remarks/>
        public string LicenseKey
        {
            get
            {
                return licenseKeyField;
            }
            set
            {
                licenseKeyField = value;
            }
        }

        /// <remarks/>
        public string Status
        {
            get
            {
                return statusField;
            }
            set
            {
                statusField = value;
            }
        }

        /// <remarks/>
        public string Message
        {
            get
            {
                return messageField;
            }
            set
            {
                messageField = value;
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLicenseKeysCompletedEventHandler(object sender, GetLicenseKeysCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.1")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetLicenseKeysCompletedEventArgs : AsyncCompletedEventArgs
    {
        private object[] results;


        internal GetLicenseKeysCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }


        /// <remarks/>
        public RentedLicenseResponse Result
        {
            get
            {
                RaiseExceptionIfNecessary();
                return ((RentedLicenseResponse)(results[0]));
            }
        }
    }
}

#pragma warning restore 1591